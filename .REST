###
POST http://localhost:3000/donantes HTTP/1.1
Content-Type: application/json

{
    
    "Codigo_postal": 1427,
    "Numero_de_watshapp": 91140478093,
    "Like": true,
    "Foto_de_perfil": "URL",
    "Done": true, 
    "Username": "FacuBrasla5",
    "Password": "facu123",
    "Name_and_Lastname": "Facundo Braslavsky",
    "Email": "facubrasla5@gmail.com",
    "Fecha_de_nacimiento": "2007-12-05",
    "Direccion": "Cabildo"
}

# SELECT * FROM "Donantes" WHERE Numero_de_watshapp=$1 or Username=$2 or Email=$3 

### eliminar un donante existente
DELETE http://localhost:3000/donantes/2 HTTP/1.1
Content-Type: application/json


###
GET http://localhost:3000/donantes HTTP/1.1
Content-Type: application/json

###
GET http://localhost:3000/donantes/6 HTTP/1.1
Content-Type: application/json

###
 ### 
PUT http://localhost:3000/donantes/1 HTTP/1.1
Content-Type: application/json

{
    "Codigo_postal": 1421,
    "Numero_de_watshapp": 91140478091,
    "Like": true,
    "Foto_de_perfil": "Fotodeperfil",
    "Done": true, 
    "Username": "FacuBrasla",
    "Password": "facu123",
    "Name_and_Lastname": "Facundo Braslavsky",
    "Email": "facubrasla@gmail.com",
    "Fecha_de_nacimiento": "2007-12-05",
    "Direccion": "Cabildo"
}

// Postear las opciones y las subopciones
###
POST http://localhost:3000/Opciones HTTP/1.1
Content-Type: application/json

{
    "Nombres": "Ropa" 
}

###
GET http://localhost:3000/Opciones HTTP/1.1
Content-Type: application/json

### no funciona
DELETE http://localhost:3000/Opciones/6 HTTP/1.1
Content-Type: application/json

// Categorias e ID de donante

###
GET http://localhost:3000/donantes/5 HTTP/1.1
Content-Type: application/json

### no funciona
GET http://localhost:3000/opciones/4 HTTP/1.1
Content-Type: application/json

###
GET http://localhost:3000/opciones/ HTTP/1.1
Content-Type: application/json

// Obtener los donantes que le dio like a una ong-osc

###
GET http://localhost:3000/donantes/5 HTTP/1.1
Content-Type: application/json

### no funciona
GET http://localhost:3000/Like/4 HTTP/1.1
Content-Type: application/json

// Todo lo que tenga que ver con ongosc

//funciona
POST http://localhost:3000/ongosc HTTP/1.1
Content-Type: application/json

{
    "Username": "TomasGrinstein",
    "Codigo_postal": 1456,
    "Email": "Tomasgrinstein@gmail.mom",
    "Numero_de_watshapp": 91180378710,
    "UsernameOrganizacion": "Mano en Mano", 
    "Password": "Totito123",
    "Direccion": "Libertador",
    "Cuit": "12345678914",
    "Foto_de_perfil": "URL",
    "Like": true,
    "Done": true   
}

### Busca a todas las ongosc, funciona
GET http://localhost:3000/Ongosc HTTP/1.1
Content-Type: application/json

### Buscar una ongosc por id
GET http://localhost:3000/Ongosc/1 HTTP/1.1
Content-Type: application/json

### Actualizar ongosc
PUT http://localhost:3000/ongosc/1 HTTP/1.1
Content-Type: application/json

{
    "Username": "TomasGrinstein1",
    "Codigo_postal": 1456,
    "Email": "Tomasgrinstein@gmail.zom",
    "Numero_de_watshapp": 91180378710,
    "UsernameOrganizacion": "Mano en Mano", 
    "Password": "Totito123",
    "Direccion": "Libertador",
    "Cuit": "12345678944",
    "Foto_de_perfil": "URL",
    "Like": true,
    "Done": true   
}


### Eliminar una ongosc existente
DELETE http://localhost:3000/ongosc/10 HTTP/1.1
Content-Type: application/json

// Donaciones

### Buscar donante que dono por id
GET http://localhost:3000/donantes/1 HTTP/1.1
Content-Type: application/json

### Buscar ongosc que dono por id
GET http://localhost:3000/ongosc/1 HTTP/1.1
Content-Type: application/json






# TO DO
# - seguridad password
# - Cambiar Like de booleano a array (se saca de la tabla de likes select * from Likes where iddonante = $1 y lo miso con Done y donantes
# - Cambiar foto de perfil a url 
# - Validar que exista el idDonantes y el IDongosc, y cuando se valida eso se puede hacer el insert en la tabla de likes, lo mismo con donaciones.
# - Validar la direccion mandarla a google maps, y que te la devuelva en el mapa.
# - se puede utilizar con el codigo postal 